# frozen_string_literal: true
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sc2ai/protocol/query.proto

require 'google/protobuf'

require 'sc2ai/protocol/common_pb'
require 'sc2ai/protocol/error_pb'


descriptor_data = "\n\x1asc2ai/protocol/query.proto\x12\x03\x41pi\x1a\x1bsc2ai/protocol/common.proto\x1a\x1asc2ai/protocol/error.proto\"\xcf\x01\n\x0cRequestQuery\x12)\n\x07pathing\x18\x01 \x03(\x0b\x32\x18.Api.RequestQueryPathing\x12\x36\n\tabilities\x18\x02 \x03(\x0b\x32#.Api.RequestQueryAvailableAbilities\x12\x36\n\nplacements\x18\x03 \x03(\x0b\x32\".Api.RequestQueryBuildingPlacement\x12$\n\x1cignore_resource_requirements\x18\x04 \x01(\x08\"\xad\x01\n\rResponseQuery\x12*\n\x07pathing\x18\x01 \x03(\x0b\x32\x19.Api.ResponseQueryPathing\x12\x37\n\tabilities\x18\x02 \x03(\x0b\x32$.Api.ResponseQueryAvailableAbilities\x12\x37\n\nplacements\x18\x03 \x03(\x0b\x32#.Api.ResponseQueryBuildingPlacement\"t\n\x13RequestQueryPathing\x12!\n\tstart_pos\x18\x01 \x01(\x0b\x32\x0c.Api.Point2DH\x00\x12\x12\n\x08unit_tag\x18\x02 \x01(\x04H\x00\x12\x1d\n\x07\x65nd_pos\x18\x03 \x01(\x0b\x32\x0c.Api.Point2DB\x07\n\x05start\"(\n\x14ResponseQueryPathing\x12\x10\n\x08\x64istance\x18\x01 \x01(\x02\"2\n\x1eRequestQueryAvailableAbilities\x12\x10\n\x08unit_tag\x18\x01 \x01(\x04\"s\n\x1fResponseQueryAvailableAbilities\x12(\n\tabilities\x18\x01 \x03(\x0b\x32\x15.Api.AvailableAbility\x12\x10\n\x08unit_tag\x18\x02 \x01(\x04\x12\x14\n\x0cunit_type_id\x18\x03 \x01(\r\"o\n\x1dRequestQueryBuildingPlacement\x12\x12\n\nability_id\x18\x01 \x01(\x05\x12 \n\ntarget_pos\x18\x02 \x01(\x0b\x32\x0c.Api.Point2D\x12\x18\n\x10placing_unit_tag\x18\x03 \x01(\x04\"C\n\x1eResponseQueryBuildingPlacement\x12!\n\x06result\x18\x01 \x01(\x0e\x32\x11.Api.ActionResult"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ["Api.Point2D", "sc2ai/protocol/common.proto"],
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn "Each proto file must use a consistent fully-qualified name."
  warn "This will become an error in the next major version."
end

module Api
  RequestQuery = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Api.RequestQuery").msgclass
  ResponseQuery = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Api.ResponseQuery").msgclass
  RequestQueryPathing = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Api.RequestQueryPathing").msgclass
  ResponseQueryPathing = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Api.ResponseQueryPathing").msgclass
  RequestQueryAvailableAbilities = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Api.RequestQueryAvailableAbilities").msgclass
  ResponseQueryAvailableAbilities = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Api.ResponseQueryAvailableAbilities").msgclass
  RequestQueryBuildingPlacement = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Api.RequestQueryBuildingPlacement").msgclass
  ResponseQueryBuildingPlacement = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("Api.ResponseQueryBuildingPlacement").msgclass
end
